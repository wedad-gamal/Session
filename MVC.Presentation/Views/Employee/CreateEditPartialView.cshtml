@model EmployeeViewModel

@{
    var methodName = Model.IsEditMode ? "Edit" : "Create";
}

<form asp-action="@methodName" enctype="multipart/form-data" method="post">

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group mt-1">
        <label asp-for="Name" class="form-control"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group mt-1">
        <label asp-for="Address" class="form-control"></label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    <div class="form-group mt-1">
        @Html.LabelFor(model => model.Salary, new { @class = "form-control" })
        @Html.TextBoxFor(e => e.Salary, new { @class = "form-control" })
        <span asp-validation-for="Salary" class="text-danger"></span>
    </div>
    <div class="form-check mt-1">

        @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })
        @Html.LabelFor(model => model.IsActive, new { @class = "form-check-label" })

        <span asp-validation-for="IsActive" class="text-danger"></span>
    </div>
    <div class="form-group mt-1">

        @Html.LabelFor(model => model.Gender, new { @class = "form-control" })
        @Html.DropDownListFor(model => model.Gender, Model.GenderList, "-select gender-", new { @class = "form-control" }) 

        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>
    <div class="form-group mt-1">
        <label asp-for="Phone" class="form-control"></label>
        <input asp-for="Phone" class="form-control" />
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>
    <div class="form-group mt-1">
        <label asp-for="Email" class="form-control"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    @{
        if (Model.IsEditMode)
        {
            <img src="/@Model.ImagePath" width="100" height="100" />
        }
    }

    <div class="form-group">
        <label asp-for="ProfilePicture"></label>
        <input asp-for="ProfilePicture" type="file" class="form-control" />
        <span asp-validation-for="ProfilePicture" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DepartmentId">Department Name</label>
        @* <select asp-for="DepartmentId" asp-items="Model.Departments" class="form-control">
                <option value="">-- Select Department --</option>
            </select> *@
        @Html.DropDownListFor(e => e.DepartmentId, Model.Departments, "--Select Department--", new { @class = "form-control" })
        <span asp-validation-for="DepartmentId" class="text-danger"></span>
    </div>



    <div class="form-group">
        <label asp-for="CountryId" name="CountryId" class="form-control">Country</label>
        @Html.DropDownListFor(e => e.CountryId, Model.Countries, "--Select Country--", new { @class = "form-control" })
        <span asp-validation-for="CountryId" class="text-danger"></span>
    </div>

    <select id="CityId" name="CityId" class="form-control">
        <option value="">-- Select City --</option>
    </select>

   @*  <div action="form-group">
        <label asp-for="CityId">City:</label>
    @Html.DropDownListFor(e => e.CityId,  Model.Cities, "--Select City--", new { @class = "form-control" , @id="CityId" })
    <span asp-validation-for="CityId" class="text-danger"></span>
    </div>
 *@
    <div class="mt-3">
        <button type="submit" class="btn btn-success">Save</button>
        <a class="btn btn-danger" asp-action="Index">Cancel</a>
    </div>

</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>

    $(document).ready(function () {
        var selectedCityId = '@Model.CityId';

        // Load cities on page load if there's a selected country
        var countryId = $('#CountryId').val();
        if (countryId) {
            loadCities(countryId, selectedCityId);
        }

        // Load cities when country changes
        $('#CountryId').change(function () {
            loadCities($(this).val(), null); // Reset city selection
        });

        function loadCities(countryId, cityIdToSelect) {
            $('#CityId').empty().append('<option>Loading...</option>');

            $.get('/Countries/' + countryId + '/cities', function (data) {
                //$('#CityId').empty().append('<option value="">-- Select City --</option>');
                $.each(data.data, function (i, city) {
                    $('#CityId').append('<option value="' + city.id + '">' + city.name + '</option>');
                });

                if (cityIdToSelect) {
                    $('#CityId').val(cityIdToSelect);
                }
            });
        }
    });
</script>
